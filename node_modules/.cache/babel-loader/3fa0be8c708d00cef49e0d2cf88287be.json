{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsProjects\\\\hacker-news-main\\\\src\\\\components\\\\FetchNews.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import format from \"date-fns/format\"\n// You can use the import above or the one below\n\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FetchNews() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [query, setQuery] = useState(\"programming\");\n  const [text, setText] = useState(\"\");\n  const [largeTitle, setLargeTitle] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // loading state\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchNews = async () => {\n      // Достаем IDшники новых истории \n      const api_url_newstories = await fetch(\"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\");\n      const idStories = await api_url_newstories.json();\n      var step; // выбираем 100 новых новостей\n\n      for (step = 0; step < 100; step++) {\n        // Открываем страницу новости\n        const api_url = await fetch(`https://hacker-news.firebaseio.com/v0/item/${idStories[step]}.json?print=pretty\"`);\n        const data = await api_url.json();\n        console.log(idStories);\n        setItems(data.hits);\n        setLargeTitle(data.hits[0]);\n      } //   const url = `https://hn.algolia.com/api/v1/search?query=${query}`\n      //   const url = `http://hn.algolia.com/api/v1/search_by_date?tags=story`\n      //   const res = await fetch(url)\n      //   const data = await res.json()\n      //   // You can change the number of items you get back in your response using\n      //   // the `Array.length` method, as demonstrated below. Uncomment the line and\n      //   // reload your app to see it in action.\n      //   // data.hits.length = 10\n      //   console.log(idStories)\n      //   setItems(data.hits)\n      //   setLargeTitle(data.hits[0])\n\n    };\n\n    fetchNews();\n    setIsLoading(false);\n  }, [query]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const api_url_newstories = await fetch(\"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\");\n    const idStories = await api_url_newstories.json();\n    console.log(idStories); // e.preventDefault()\n    // if (!text) {\n    //   console.log(\"Input is empty\")\n    // } else {\n    //   setQuery(text)\n    //   setText(\"\")\n    //   console.log(text)\n    //   console.log(query)\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"flex place-items-center container mx-auto lg:max-w-4xl mt-10 px-5\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            className: \"bg-white border border-gray-700 text-xl lg:text-4xl py-2 px-6 rounded lg:pb-4 text-gray-700 hover:bg-transparent transition-all duration-150\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"grid grid-cols-1 gap-5 p-5 md:grid-cols-2 container mx-auto lg:max-w-4xl\",\n          children: items.map(item => {\n            const {\n              author,\n              created_at,\n              objectID,\n              title,\n              url\n            } = item;\n            return /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"bg-gray-800 rounded p-3 transition-all duration-150\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-white text-lg mb-3\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600\",\n                  children: [\"By \", /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: url,\n                  target: \"_blank\",\n                  rel: \"noopenner noreferrer\",\n                  className: \"border-b border-gray-700 text-gray-600 text-lg hover:text-gray-400 hover:border-gray-400\",\n                  children: \"Read More\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400 mt-10\",\n                children: format(new Date(created_at), \"dd MMM yyyy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)]\n            }, objectID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(FetchNews, \"6gx66ann52QBaPGAS8lYChjI7es=\");\n\n_c = FetchNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchNews\");","map":{"version":3,"sources":["D:/JsProjects/hacker-news-main/src/components/FetchNews.js"],"names":["useState","useEffect","format","FetchNews","items","setItems","query","setQuery","text","setText","largeTitle","setLargeTitle","isLoading","setIsLoading","fetchNews","api_url_newstories","fetch","idStories","json","step","api_url","data","console","log","hits","handleSubmit","e","preventDefault","map","item","author","created_at","objectID","title","url","Date"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\n// import format from \"date-fns/format\"\r\n// You can use the import above or the one below\r\nimport { format } from \"date-fns\"\r\n\r\nexport default function FetchNews() {\r\n  const [items, setItems] = useState([])\r\n  const [query, setQuery] = useState(\"programming\")\r\n  const [text, setText] = useState(\"\")\r\n  const [largeTitle, setLargeTitle] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true) // loading state\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const fetchNews = async () => {\r\n        // Достаем IDшники новых истории \r\n        const api_url_newstories = await \r\n        fetch (\r\n        \"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\"\r\n        )\r\n        const idStories = await api_url_newstories.json();\r\n        var step;\r\n        // выбираем 100 новых новостей\r\n        for (step = 0; step < 100; step++) {\r\n            // Открываем страницу новости\r\n            const api_url = await\r\n            fetch (\r\n            `https://hacker-news.firebaseio.com/v0/item/${idStories[step]}.json?print=pretty\"`\r\n            )\r\n            const data = await api_url.json();\r\n            console.log(idStories)\r\n            setItems(data.hits)\r\n            setLargeTitle(data.hits[0])\r\n        }\r\n\r\n\r\n    //   const url = `https://hn.algolia.com/api/v1/search?query=${query}`\r\n    //   const url = `http://hn.algolia.com/api/v1/search_by_date?tags=story`\r\n      \r\n    //   const res = await fetch(url)\r\n    //   const data = await res.json()\r\n    //   // You can change the number of items you get back in your response using\r\n    //   // the `Array.length` method, as demonstrated below. Uncomment the line and\r\n    //   // reload your app to see it in action.\r\n    //   // data.hits.length = 10\r\n    //   console.log(idStories)\r\n    //   setItems(data.hits)\r\n    //   setLargeTitle(data.hits[0])\r\n    }\r\n\r\n    fetchNews()\r\n    setIsLoading(false)\r\n  }, [query])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const api_url_newstories = await \r\n    fetch (\r\n    \"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\"\r\n    )\r\n    const idStories = await api_url_newstories.json();\r\n    console.log(idStories);\r\n    \r\n    \r\n    \r\n    \r\n    // e.preventDefault()\r\n\r\n    // if (!text) {\r\n    //   console.log(\"Input is empty\")\r\n    // } else {\r\n    //   setQuery(text)\r\n    //   setText(\"\")\r\n    //   console.log(text)\r\n    //   console.log(query)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {isLoading ? (\r\n          <div className=\"spinner\"></div>\r\n        ) : (\r\n          <>\r\n            {/* Search form */}\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"flex place-items-center container mx-auto lg:max-w-4xl mt-10 px-5\"\r\n            >\r\n              {/* <input\r\n                type=\"text\"\r\n                name=\"text\"\r\n                id=\"text\"\r\n                placeholder=\"Search for something...\"\r\n                autoComplete=\"off\"\r\n                required\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                className=\"w-full py-2 px-4 rounded bg-transparent border border-gray-700 focus:border-gray-600 transition-all duration-150 outline-none text-gray-700 placeholder-gray-700 text-xl lg:text-4xl lg:pb-4 mr-5\"\r\n              /> */}\r\n              <button\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n                className=\"bg-white border border-gray-700 text-xl lg:text-4xl py-2 px-6 rounded lg:pb-4 text-gray-700 hover:bg-transparent transition-all duration-150\"\r\n              >\r\n                Search\r\n              </button>\r\n            </form>\r\n            {/* End of search form */}\r\n\r\n            {/* <article className=\"my-10 flex flex-col items-center justify-center container lg:max-w-4xl mx-auto px-5\">\r\n              <h1 className=\"font-bold text-center text-4xl my-5 text-white lg:text-6xl\">\r\n                {largeTitle.title}\r\n              </h1>\r\n              <a\r\n                href={largeTitle.url}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"border-b border-gray-700 text-gray-600 text-lg hover:text-gray-400 hover:border-gray-400\"\r\n              >\r\n                Read Full Story\r\n              </a>\r\n            </article> */}\r\n\r\n            {/* <article className=\"container mx-auto lg:max-w-4xl px-5\">\r\n              <p className=\"text-gray-600\">\r\n                Category:{\" \"}\r\n                <span className=\"font-bold text-gray-400 capitalize\">\r\n                  {query}\r\n                </span>\r\n              </p>\r\n            </article> */}\r\n\r\n            <section className=\"grid grid-cols-1 gap-5 p-5 md:grid-cols-2 container mx-auto lg:max-w-4xl\">\r\n              {items.map((item) => {\r\n                const { author, created_at, objectID, title, url } = item\r\n\r\n                return (\r\n                  <article\r\n                    key={objectID}\r\n                    className=\"bg-gray-800 rounded p-3 transition-all duration-150\"\r\n                  >\r\n                    <h3 className=\"font-bold text-white text-lg mb-3\">\r\n                      {title}\r\n                    </h3>\r\n                    <article className=\"flex items-center justify-between\">\r\n                      <p className=\"text-gray-600\">\r\n                        By <em>{author}</em>\r\n                      </p>\r\n                      <a\r\n                        href={url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopenner noreferrer\"\r\n                        className=\"border-b border-gray-700 text-gray-600 text-lg hover:text-gray-400 hover:border-gray-400\"\r\n                      >\r\n                        Read More\r\n                      </a>\r\n                    </article>\r\n                    <p className=\"text-gray-400 mt-10\">\r\n                      {/* Format date using the `format` method from `date-fns` */}\r\n                      {format(new Date(created_at), \"dd MMM yyyy\")}\r\n                    </p>\r\n                  </article>\r\n                )\r\n              })}\r\n            </section>\r\n          </>\r\n        )}\r\n      </main>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}