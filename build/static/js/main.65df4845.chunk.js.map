{"version":3,"sources":["components/FetchNews.jsx","components/Item.jsx","App.jsx","index.js"],"names":["FetchNews","useState","stories","storiess","setStoriess","query","isLoading","setIsLoading","navigate","useNavigate","useEffect","a","fetch","api_url_newstories","json","idStories","step","api_urlStory","story","push","fetchNews","className","type","onClick","e","preventDefault","window","location","reload","flatMap","item","by","id","time","title","descendants","url","date","Date","event","toLocaleDateString","weekday","day","year","month","Item","itemId","href","replace","itemGet","setItem","comments","setCooments","queryy","setIsLoadingg","api_story_id","storyInfo","kids","commentInfo","console","log","fetchStory","author","commentId","commentBy","commentText","text","options","to","target","rel","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65df4845.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router,  Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function FetchNews() {\r\n\r\n  \r\n  const [stories, setStories] = useState([])\r\n  const [storiess, setStoriess] = useState([])\r\n  const [query, setQuery] = useState(\"programming\")\r\n  const [isLoading, setIsLoading] = useState(true) \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    const fetchNews = async () => {\r\n\r\n      const api_url_newstories = await \r\n      fetch (\r\n      \"https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty\"\r\n      )\r\n      const idStories = await api_url_newstories.json();\r\n      \r\n      var step;\r\n          // выбираем 100 новых новостей\r\n          for (step = 0; step < 100; step++) {\r\n              // Открываем страницу новости\r\n              const api_urlStory = await\r\n              fetch (\r\n              `https://hacker-news.firebaseio.com/v0/item/${idStories[step]}.json?print=pretty\"`\r\n              )\r\n              const story = await api_urlStory.json();\r\n              if (story != null){\r\n                stories.push(story); \r\n              }\r\n          } \r\n          setStoriess(stories);\r\n    }\r\n    fetchNews()\r\n    setIsLoading(false)\r\n  }, [query])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {isLoading ? (\r\n          <div className=\"spinner\"></div>\r\n        ) : (\r\n          <>\r\n            <button\r\n                      type=\"button\"\r\n                      onClick={handleSubmit}\r\n                      className=\"bg-white border border-gray-700 lg:text-xl py-2 px-6 rounded lg:pb-3 text-gray-700 hover:bg-transparent transition-all duration-150\"\r\n                    >\r\n                      Reload\r\n                    </button>\r\n            <section className=\"grid grid-cols-1 gap-5 p-5 md:grid-cols-2 container mx-auto lg:max-w-4xl\">\r\n              {\r\n                storiess.flatMap((item) => {\r\n\r\n                const { by, id,  time, title, url, descendants } = item\r\n\r\n                // конвертируем дату из long в date\r\n                let date = new Date(time*1000);\r\n                let options = { weekday: 'long', day: 'numeric', year: 'numeric', month: 'long' };\r\n                \r\n\r\n                return (\r\n                  <button onClick={async event => { navigate(`/Item/${id}`); }}>\r\n                    <article\r\n                      key={id}\r\n                      className=\"bg-gray-800 rounded p-3 transition-all duration-150\"\r\n                    >\r\n                    <h3 className=\"font-bold text-white text-lg mb-3\">\r\n                      {title}\r\n                    </h3>      \r\n                    <article className=\"flex items-center justify-between\">\r\n                      <p className=\"text-gray-600\">\r\n                        By <em>{by}</em>\r\n                      </p>\r\n                      <p className=\"text-gray-600\">\r\n                      Comments: {descendants}\r\n                      </p>\r\n                    </article>\r\n                    <p className=\"text-gray-400 mt-10\">\r\n                      {date.toLocaleDateString(\"en-US\", options)}\r\n                    </p>\r\n                    </article>\r\n                    <Outlet />\r\n                  </button>\r\n                )\r\n              })}\r\n            </section>\r\n          </>\r\n        )}\r\n      </main>\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { BrowserRouter as Router,  Link, Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction Item() {\r\n\r\n// достаем из url id новости \r\n  const currentUrl = window.location.href;\r\n  const localhost3000 = \"http://localhost:3000/Item/\"\r\n  const itemId = currentUrl.replace(localhost3000, \"\")\r\n  let by = \"\";\r\n\r\n  \r\n  const [itemGet, setItem] = useState([])\r\n\r\n  const [comments, setCooments] = useState([])\r\n\r\n  \r\n  // const [itemm, setItemm] = useState([])\r\n  const [queryy, setQueryy] = useState(\"programming\")\r\n  const [isLoading, setIsLoadingg] = useState(true) // loading state\r\n  // const useNavigate = ReactRouterDOM.useNavigate;\r\n  const navigate = useNavigate();\r\n\r\n  // const useNavigate = ReactRouterDOM.useNavigate;\r\n  // const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setIsLoadingg(true)\r\n    const fetchStory = async () => {\r\n      const api_story_id = await \r\n      fetch (`https://hacker-news.firebaseio.com/v0/item/${itemId}.json?print=pretty`)\r\n      const storyInfo = await api_story_id.json()\r\n\r\n      setItem(storyInfo)\r\n      \r\n      var step;\r\n      \r\n      for (step = 0; step < storyInfo.descendants; step++) {\r\n        const api_story_id = await \r\n        fetch (`https://hacker-news.firebaseio.com/v0/item/${storyInfo.kids[step]}.json?print=pretty`)\r\n        const commentInfo = await api_story_id.json()\r\n        if (commentInfo != null){\r\n          console.log(commentInfo)\r\n          setCooments(commentInfo)\r\n        }\r\n      }\r\n      \r\n    }\r\n\r\n    fetchStory()\r\n    // setItemm(itemGett)\r\n    // setCoomentss(comments)\r\n    setIsLoadingg(false)\r\n  }, [queryy]);\r\n\r\n  const author = itemGet.by; \r\n  const id = itemGet.id; \r\n  const descendants = itemGet.descendants; \r\n  const title = itemGet.title; \r\n  const url = itemGet.url; \r\n  const time = itemGet.time; \r\n  \r\n  const commentId = comments.id;\r\n  const commentBy = comments.by; \r\n  const commentText = comments.text; \r\n\r\n  // конвертируем дату из long в date\r\n  let date = new Date(time*1000);\r\n  let options = { weekday: 'long', day: 'numeric', year: 'numeric', month: 'long' };\r\n  \r\n  return <div>\r\n                    <article\r\n                          key={id}\r\n                          className=\"bg-gray-800 rounded p-3 transition-all duration-150\">\r\n                        <Link to=\"/\">\r\n                          <h3 className=\"border-b font-bolder text-white text-xl mb-3\">Home</h3>\r\n                        </Link>\r\n                        <Outlet />\r\n                      \r\n                        <h3 className=\"font-bold text-white text-lg mb-3\">\r\n                          {title}\r\n                        </h3> \r\n        \r\n                        <article className=\"flex items-center justify-between\">\r\n                          <p className=\"text-gray-600\">\r\n                            By <em>{author}</em>\r\n                          </p>\r\n                          <a\r\n                            href={url}\r\n                            target=\"_blank\"\r\n                            rel=\"noopenner noreferrer\"\r\n                            className=\"border-b border-gray-700 text-gray-600 text-lg hover:text-gray-400 hover:border-gray-400\"\r\n                          >\r\n                            Link\r\n                          </a>\r\n                    \r\n                    </article>\r\n                    <p className=\"text-gray-400 mt-10\">\r\n                      {date.toLocaleDateString(\"en-US\", options)}\r\n                    </p>\r\n                    <p className=\"text-gray-400 mt-10\">\r\n                      Comments: {descendants}\r\n                    </p>\r\n                  </article> \r\n                  {\r\n                      commentId &&\r\n                        (\r\n                              <div className=\" gap-5 p-5 md:grid-cols-2 container mx-auto lg:max-w-4xl\">\r\n                              \r\n                              <article\r\n                                key={commentId}\r\n                                className=\"bg-gray-800 rounded p-3 transition-all duration-150\"\r\n                              >\r\n                              <h4 className=\"font-bold text-white  mb-3\">\r\n                                {commentText}\r\n                              </h4>      \r\n                              <article className=\"flex items-center justify-between\">\r\n                                <p className=\"text-gray-600\">\r\n                                  By <em>{commentBy}</em>\r\n                                </p>\r\n                              </article>\r\n                                \r\n                              <p className=\"text-gray-400 mt-10\">\r\n                                {date.toLocaleDateString(\"en-US\", options)}\r\n                              </p>\r\n                              </article>\r\n                            </div>\r\n                        )\r\n                  }\r\n    </div>   \r\n}\r\n\r\nexport default Item;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ","import { Routes, Route } from \"react-router-dom\"\nimport FetchNews from \"./components/FetchNews\"\nimport Item from \"./components/Item\"\n\nexport default function App() {\n  return (\n    <>\n                      <Routes>\n                        <Route path=\"/\" element={<FetchNews />} />\n                        <Route path='/Item/:id' element={<Item />}/>\n                      </Routes>\n    </>\n  )\n}\n\n\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n)\n"],"sourceRoot":""}